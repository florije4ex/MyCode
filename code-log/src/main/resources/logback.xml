<configuration debug="true">

    <!--输出日志到当前系统用户目录下-->
    <property name="LOG_HOME" value="${user.home}/logs/logback"/>
    <!--datePattern 表示把当前时间(解析配置文件的时间)转换成字符串时使用的日期模式，遵从 java.text.SimpleDateFormat 里的约定
    主要注意的是，文件名里面不要使用操作系统规定的文件名非法字符，比如冒号:-->
    <timestamp key="bySecond" datePattern="yyyyMMdd-HHmmssSSS"/>

    <!--这个是默认的控制台输出配置，如果没有自定义任何 appender 配置，默认就是这个格式-->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!--encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder by default-->
        <encoder>
            <pattern>
                %d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <!--被写入的文件名。如果文件不存在，则自动创建，如果文件的父目录不存在，FileAppender 会自动创建各级不存在的目录。-->
        <file>${LOG_HOME}/business-${bySecond}.log</file>
        <!--如果 true，事件被追加到现存文件尾部。 如果 false，清空现存文件。默认为 true。-->
        <append>true</append>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{10} [%file:%line] %msg%n
            </pattern>
        </encoder>
    </appender>

    <!--RollingFileAppender 继承了FileAppender的各种属性，然后添加了滚动策略：rollingPolicy-->
    <appender name="ROLLING-FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/business.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                <!--%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{10} [%file:%line] %msg%n-->
                %d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{10} %msg%n
            </pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/business-%d{yyyyMMdd}.log.gz</fileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
        <!--异步日志输出时的阻塞队列，默认大小是 256，如果业务日志量太大，可以根据需要调整-->
        <queueSize>1024</queueSize>
        <!--默认当队列容量剩余 20%的空间时，会丢弃TRACE, DEBUG and INFO级别的日志，只保留WARN and ERROR的事件，如果想要不丢弃任何日志，设置为 0-->
        <discardingThreshold>0</discardingThreshold>
        <!--真实的输出目的地，appender-ref 只能写一个-->
        <appender-ref ref="ROLLING-FILE"/>
    </appender>

    <root level="debug">
        <!--<appender-ref ref="STDOUT"/>-->
        <!--<appender-ref ref="FILE"/>-->
        <!--<appender-ref ref="ROLLING-FILE"/>-->
        <appender-ref ref="ASYNC"/>
    </root>
</configuration>